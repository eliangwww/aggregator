name: Refresh
on:
  # 每两小时执行一次
  schedule:
    - cron: "0 */2 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.repository }}
  cancel-in-progress: true

env:
  # 设置时区为北京时间
  TZ: Asia/Shanghai

  # github access token
  GIST_PAT: ${{ secrets.GIST_PAT }}

  # Gist 链接，包含用户名和 Gist ID
  GIST_LINK: ${{ secrets.GIST_LINK }}

  # 自定义链接
  CUSTOMIZE_LINK: ${{ secrets.CUSTOMIZE_LINK }}

  # 启用特殊协议
  ENABLE_SPECIAL_PROTOCOLS: ${{ vars.ENABLE_SPECIAL_PROTOCOLS }}

  # Telegram bot token and chat id
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          architecture: "x64"
          cache: "pip"

      - name: Install
        run: |
          pip3 install -r requirements.txt
          pip3 install python-telegram-bot pyyaml

      - name: Check
        run: |
          if [ -z "$GIST_PAT" ]; then
              echo "Error: environment 'GIST_PAT' cannot be empty"
              exit 1
          fi

          if [ -z "$GIST_LINK" ]; then
              echo "Error: environment 'GIST_LINK' cannot be empty"
              exit 1
          fi

          LINK_PARTS=$(echo "$GIST_LINK" | awk -F'/' 'NF==2 && $1!="" && $2!=""')
          if [ -z "$LINK_PARTS" ]; then
              echo "Error: environment 'GIST_LINK' is not valid, should be 'username/gist_id' format"
              exit 1
          fi

      - name: Refresh
        run: python -u subscribe/collect.py -t clash mixed --all --refresh --overwrite --skip

      - name: Timestamp
        run: date

      - name: Notify
        env:
          GIST_FILE_URL: "https://gist.githubusercontent.com/${{ env.GIST_LINK }}/raw/clash.yaml"
        run: |
          python3 <<EOF
import os
import yaml
import requests
from datetime import datetime
from telegram import Bot
import pytz

# 设置 Telegram Bot
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
CHAT_ID = os.getenv('TELEGRAM_CHAT_ID')
bot = Bot(token=TOKEN)

# 获取北京时间
beijing = pytz.timezone('Asia/Shanghai')
update_time = datetime.now(beijing).strftime('%Y-%m-%d %H:%M:%S')

# 下载并解析 Gist 文件
url = os.getenv('GIST_FILE_URL')
response = requests.get(url)
data = yaml.safe_load(response.text)

# 解析节点数量和地区
node_count = len(data['proxies'])
regions = set()
for proxy in data['proxies']:
    if 'name' in proxy and proxy['name'][0] in ["🇺🇸", "🇬🇧", "🇨🇳", "🇯🇵"]:  # 你可以根据需要添加其他旗帜
        regions.add(proxy['name'][0])

# 生成消息内容
message = f"""
更新时间: {update_time} (北京时间)
节点数量: {node_count}
节点地区: {', '.join(regions)}
"""

# 发送 Telegram 消息
bot.send_message(chat_id=CHAT_ID, text=message)
EOF
